# Generated by Django 2.2 on 2020-12-04 06:54

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '__first__'),
        ('settings', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=25)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute', to='catalog.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/category/')),
                ('is_available', models.BooleanField(default=True)),
                ('show_on_landing', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=1)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.Category')),
            ],
            options={
                'verbose_name_plural': 'Category',
                'ordering': ('display_order', '-id'),
            },
        ),
        migrations.CreateModel(
            name='Flavour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_popular', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Occasion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('long_description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Long Description')),
                ('delivery_information', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Delivery Information')),
                ('instruction', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='instruction')),
                ('image', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/catalog/products')),
                ('image1', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/catalog/products')),
                ('image2', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/catalog/products')),
                ('image3', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/catalog/products')),
                ('is_available', models.BooleanField(default=True)),
                ('is_best_seller', models.BooleanField(default=False)),
                ('show_eggless', models.BooleanField(default=True)),
                ('show_sugarless', models.BooleanField(default=True)),
                ('is_recomended', models.BooleanField(default=False)),
                ('min_order_time', models.FloatField(default=1)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
                ('display_order', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'Product',
                'ordering': ('display_order', '-id'),
            },
        ),
        migrations.CreateModel(
            name='ProductAddons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('price', models.FloatField()),
                ('addon_image', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/catalog/addons')),
            ],
            options={
                'verbose_name_plural': 'Product Addons',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='SessionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=700, null=True)),
                ('image', models.ImageField(blank=True, max_length=700, null=True, upload_to='images/session-images/')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Product Tags',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProductVarient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('varient_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('old_price', models.FloatField()),
                ('price', models.FloatField(blank=True, null=True)),
                ('product_code', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField()),
                ('is_available_varient', models.BooleanField(default=True)),
                ('display_order_varient', models.IntegerField(default=1)),
                ('base_varient', models.BooleanField(default=False)),
                ('attribut_value', models.ManyToManyField(blank=True, related_name='attribute_value', to='catalog.AttributeValue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='catalog.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField()),
                ('review_star', models.FloatField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('customer_purchased', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_customer', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_review', to='catalog.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='addons',
            field=models.ManyToManyField(blank=True, related_name='addons', to='catalog.ProductAddons'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand', to='catalog.Brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='category', to='catalog.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='flavour',
            field=models.ManyToManyField(blank=True, related_name='flavour', to='catalog.Flavour'),
        ),
        migrations.AddField(
            model_name='product',
            name='occasion',
            field=models.ManyToManyField(blank=True, related_name='occasion', to='catalog.Occasion'),
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, related_name='_product_related_products_+', to='catalog.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='shipping_method',
            field=models.ManyToManyField(blank=True, related_name='product_shipping_method', to='settings.ShippingMethod'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_product', to='store.Store'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Tags'),
        ),
    ]
