# Generated by Django 2.2 on 2020-12-04 06:54

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('settings', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Carts',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_fullname', models.CharField(max_length=30)),
                ('receiver_email', models.EmailField(max_length=30)),
                ('receiver_delivery_address', models.CharField(max_length=50)),
                ('receiver_landmark', models.CharField(blank=True, max_length=30, null=True)),
                ('receiver_address_type', models.CharField(choices=[('HOME', 'Home'), ('OFFICE', 'Office'), ('OTHER', 'other')], max_length=15)),
                ('receiver_contact_number1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\d{1,20}$')])),
                ('receiver_contact_number2', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\d{1,20}$')])),
                ('occasion', models.CharField(choices=[('BIRTHDAY', 'Birthday'), ('ANNIVERSARY', 'Anniversary'), ('BABY SHOWER', 'Baby Shower'), ('WEEDING', 'Weeding')], max_length=15)),
                ('sender_fullname', models.CharField(max_length=30)),
                ('sender_email', models.EmailField(blank=0, max_length=254, null=True)),
                ('contact_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\d{1,20}$')])),
                ('hide_info_from_receiver', models.BooleanField(default=False)),
                ('i_am_receiver', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Delivery Address',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DeliveryNepxpress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=100, null=True)),
                ('activity', models.CharField(blank=True, max_length=900, null=True)),
                ('comment', models.CharField(blank=True, max_length=900, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=100, unique=True)),
                ('total', models.FloatField()),
                ('sub_total_order', models.FloatField()),
                ('shipping_cost', models.FloatField()),
                ('coupon', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.FloatField(blank=True, default=0, null=True)),
                ('refunded_amount', models.FloatField(blank=True, null=True)),
                ('order_status', models.CharField(choices=[('Unconfirmed', 'Unconfirmed'), ('Confirmed', 'Confirmed'), ('Ready', 'Ready'), ('Complete', 'Complete'), ('Cancelled', 'Cancelled'), ('Dispatched', 'Dispatched')], max_length=20)),
                ('payment_status', models.CharField(choices=[('Awaiting Payment', 'Awaiting Payment'), ('Paid', 'Paid'), ('Declined', 'Declined'), ('Cancelled', 'Cancelled')], max_length=20)),
                ('customer_notes', models.CharField(blank=True, max_length=200, null=True)),
                ('placed_on', models.DateField(auto_now_add=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('order_from', models.CharField(blank=True, max_length=20, null=True)),
                ('delivery_date', models.CharField(blank=True, max_length=200, null=True)),
                ('delivery_sent_nepxpress', models.BooleanField(default=False)),
                ('delivery_assigned', models.CharField(blank=True, max_length=250, null=True)),
                ('tax_rate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_order', to=settings.AUTH_USER_MODEL)),
                ('delivery_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_orders', to='sales.DeliveryAddress')),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(help_text='Unit price of the product')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sub_total', models.FloatField()),
                ('total', models.FloatField()),
                ('special_instruction', models.TextField(blank=True, max_length=400, null=True)),
                ('is_sugerless', models.BooleanField()),
                ('is_eggless', models.BooleanField()),
                ('date', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
                ('pound', models.FloatField()),
                ('photo_cake_image', models.ImageField(blank=True, max_length=700, null=True, upload_to='cart/photocake/')),
                ('addons', models.ManyToManyField(blank=True, related_name='order_addons', to='catalog.ProductAddons')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sales.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_varient', to='catalog.ProductVarient')),
                ('shipping_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitem_shipping_method', to='settings.ShippingMethod')),
            ],
            options={
                'verbose_name_plural': 'Order Items',
                'db_table': 'sales_order_item',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrderExtraCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('rate', models.FloatField()),
                ('total', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_charge', to='sales.Order')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('date', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
                ('message', models.TextField(blank=True, max_length=40, null=True)),
                ('is_eggless', models.BooleanField(default=False)),
                ('is_sugarless', models.BooleanField(default=False)),
                ('pound', models.FloatField()),
                ('photo_cake_image', models.ImageField(blank=True, max_length=700, null=True, upload_to='cart/photocake/')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sales.Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='catalog.ProductVarient')),
                ('shipping_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_shipping_method', to='settings.ShippingMethod')),
            ],
            options={
                'verbose_name_plural': 'Cart Items',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='AddonOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('addons', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderitem_addons', to='catalog.ProductAddons')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitem_addons', to='sales.OrderItem')),
            ],
        ),
        migrations.CreateModel(
            name='AddonItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('addons', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cart_addons', to='catalog.ProductAddons')),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_addons', to='sales.CartItem')),
            ],
        ),
    ]
